---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/account/login":
    post:
      summary: Login an account
      tags:
      - acore_auth
      parameters: []
      responses:
        '200':
          description: login successful
          content: {}
        '401':
          description: wrong password
          content: {}
        '404':
          description: account not found
          content: {}
        '500':
          description: error
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
  "/account/register":
    post:
      summary: Register an account
      tags:
      - acore_auth
      parameters: []
      responses:
        '201':
          description: account created
          content: {}
        '403':
          description: username is taken
          content: {}
        '404':
          description: email is taken
          content: {}
        '500':
          description: error
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
              required:
              - username
              - password
              - email
  "/characters/all":
    get:
      summary: All Characters
      tags:
      - acore_characters
      responses:
        '200':
          description: success
          content: {}
        '500':
          description: error
          content: {}
  "/characters/get/{params}":
    get:
      summary: Get a single Character by guid or name
      tags:
      - acore_characters
      parameters:
      - name: params
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: integer
                  class:
                    type: integer
                  account:
                    type: integer
                  name:
                    type: string
                  race:
                    type: integer
                  gender:
                    type: integer
                  level:
                    type: integer
                  xp:
                    type: integer
                  money:
                    type: integer
        '500':
          description: error
          content: {}
  "/news/create":
    post:
      summary: Create New Article
      tags:
      - local
      parameters: []
      responses:
        '201':
          description: success
          content: {}
        '500':
          description: error
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
              required:
              - title
              - content
  "/news/get/{slug}":
    get:
      summary: Get single Article
      tags:
      - local
      parameters:
      - name: slug
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          content: {}
        '500':
          description: error
          content: {}
  "/news":
    get:
      summary: Get all News Articles
      tags:
      - local
      responses:
        '200':
          description: success
          content: {}
        '500':
          description: error
          content: {}
  "/realm/info":
    get:
      summary: Realm Info
      tags:
      - acore_auth
      responses:
        '200':
          description: success
          examples:
            application/json:
              id: 1
              title: Hello world!
              content: "..."
          content: {}
        '500':
          description: error
          content: {}
  "/realm/uptime":
    get:
      summary: Realm Uptime
      tags:
      - acore_auth
      responses:
        '200':
          description: success
          content: {}
        '500':
          description: error
          content: {}
  "/realm/characters":
    get:
      summary: Realm Characters
      tags:
      - acore_auth
      responses:
        '200':
          description: success
          content: {}
        '500':
          description: error
          content: {}
servers:
- url: "{defaultHost}"
  variables:
    defaultHost:
      default: http://localhost:5000
