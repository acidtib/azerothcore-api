class Characters::CharactersController < ApplicationController
  
  def all
    characters = Characters::Characters.all

    result = characters.each.map do |character|
      {
        guid: character.guid,
        class: character["class"],
        account: character.account,
        name: character.name,
        race: character.race,
        gender: character.gender, 
        level: character.level, 
        xp: character.xp, 
        money: character.money, 
        skin: character.skin, 
        face: character.face, 
        hairStyle: character.hairStyle, 
        hairColor: character.hairColor, 
        facialStyle: character.facialStyle, 
        bankSlots: character.bankSlots, 
        restState: character.restState, 
        playerFlags: character.playerFlags, 
        position_x: character.position_x, 
        position_y: character.position_y, 
        position_z: character.position_z, 
        map: character.map, 
        instance_id: character.instance_id, 
        instance_mode_mask: character.instance_mode_mask, 
        orientation: character.orientation, 
        taximask: character.taximask, 
        online: character.online, 
        cinematic: character.cinematic, 
        totaltime: character.totaltime, 
        leveltime: character.leveltime, 
        logout_time: character.logout_time, 
        is_logout_resting: character.is_logout_resting, 
        rest_bonus: character.rest_bonus, 
        resettalents_cost: character.resettalents_cost, 
        resettalents_time: character.resettalents_time, 
        trans_x: character.trans_x, 
        trans_y: character.trans_y, 
        trans_z: character.trans_z, 
        trans_o: character.trans_o, 
        transguid: character.transguid, 
        extra_flags: character.extra_flags, 
        stable_slots: character.stable_slots, 
        at_login: character.at_login, 
        zone: character.zone, 
        death_expire_time: character.death_expire_time, 
        taxi_path: character.taxi_path, 
        arenaPoints: character.arenaPoints, 
        totalHonorPoints: character.totalHonorPoints, 
        todayHonorPoints: character.todayHonorPoints, 
        yesterdayHonorPoints: character.yesterdayHonorPoints, 
        totalKills: character.totalKills, 
        todayKills: character.todayKills, 
        yesterdayKills: character.yesterdayKills, 
        chosenTitle: character.chosenTitle, 
        knownCurrencies: character.knownCurrencies, 
        watchedFaction: character.watchedFaction, 
        drunk: character.drunk, 
        health: character.health, 
        power1: character.power1, 
        power2: character.power2, 
        power3: character.power3, 
        power4: character.power4, 
        power5: character.power5, 
        power6: character.power6, 
        power7: character.power7, 
        latency: character.latency, 
        talentGroupsCount: character.talentGroupsCount, 
        activeTalentGroup: character.activeTalentGroup, 
        exploredZones: character.exploredZones, 
        equipmentCache: character.equipmentCache, 
        ammoId: character.ammoId, 
        knownTitles: character.knownTitles, 
        actionBars: character.actionBars, 
        grantableLevels: character.grantableLevels, 
        creation_date: character.creation_date, 
        deleteInfos_Account: character.deleteInfos_Account, 
        deleteInfos_Name: character.deleteInfos_Name, 
        deleteDate: character.deleteDate
      }
    end

    render json: result
  end

  def get
    status = 200

    if params["params"].to_i.to_s == params["params"]
      character = Characters::Characters.find_by_guid(params["params"].to_i)
    else
      character = Characters::Characters.find_by_name(params["params"])
    end

    if character
      result = {
        guid: character.guid,
        class: character["class"],
        account: character.account,
        name: character.name,
        race: character.race,
        gender: character.gender, 
        level: character.level, 
        xp: character.xp, 
        money: character.money, 
        skin: character.skin, 
        face: character.face, 
        hairStyle: character.hairStyle, 
        hairColor: character.hairColor, 
        facialStyle: character.facialStyle, 
        bankSlots: character.bankSlots, 
        restState: character.restState, 
        playerFlags: character.playerFlags, 
        position_x: character.position_x, 
        position_y: character.position_y, 
        position_z: character.position_z, 
        map: character.map, 
        instance_id: character.instance_id, 
        instance_mode_mask: character.instance_mode_mask, 
        orientation: character.orientation, 
        taximask: character.taximask, 
        online: character.online, 
        cinematic: character.cinematic, 
        totaltime: character.totaltime, 
        leveltime: character.leveltime, 
        logout_time: character.logout_time, 
        is_logout_resting: character.is_logout_resting, 
        rest_bonus: character.rest_bonus, 
        resettalents_cost: character.resettalents_cost, 
        resettalents_time: character.resettalents_time, 
        trans_x: character.trans_x, 
        trans_y: character.trans_y, 
        trans_z: character.trans_z, 
        trans_o: character.trans_o, 
        transguid: character.transguid, 
        extra_flags: character.extra_flags, 
        stable_slots: character.stable_slots, 
        at_login: character.at_login, 
        zone: character.zone, 
        death_expire_time: character.death_expire_time, 
        taxi_path: character.taxi_path, 
        arenaPoints: character.arenaPoints, 
        totalHonorPoints: character.totalHonorPoints, 
        todayHonorPoints: character.todayHonorPoints, 
        yesterdayHonorPoints: character.yesterdayHonorPoints, 
        totalKills: character.totalKills, 
        todayKills: character.todayKills, 
        yesterdayKills: character.yesterdayKills, 
        chosenTitle: character.chosenTitle, 
        knownCurrencies: character.knownCurrencies, 
        watchedFaction: character.watchedFaction, 
        drunk: character.drunk, 
        health: character.health, 
        power1: character.power1, 
        power2: character.power2, 
        power3: character.power3, 
        power4: character.power4, 
        power5: character.power5, 
        power6: character.power6, 
        power7: character.power7, 
        latency: character.latency, 
        talentGroupsCount: character.talentGroupsCount, 
        activeTalentGroup: character.activeTalentGroup, 
        exploredZones: character.exploredZones, 
        equipmentCache: character.equipmentCache, 
        ammoId: character.ammoId, 
        knownTitles: character.knownTitles, 
        actionBars: character.actionBars, 
        grantableLevels: character.grantableLevels, 
        creation_date: character.creation_date, 
        deleteInfos_Account: character.deleteInfos_Account, 
        deleteInfos_Name: character.deleteInfos_Name, 
        deleteDate: character.deleteDate
      }
    else
      status = 404
      
      result = {error: "cant find character"}
    end

    render json: result, status: status
  end
end